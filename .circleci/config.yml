version: 2.1

executors:
    # OpenMPI
    buster_openmpi:
        docker:
            - image:  docker.io/cselab/debian_buster_openmpi:latest

    fedora_openmpi:
        docker:
            - image:  docker.io/cselab/fedora_openmpi:latest

    ubuntu_openmpi:
        docker:
            - image:  docker.io/cselab/ubuntu_openmpi:rolling

    centos_openmpi:
        docker:
            - image:  docker.io/cselab/centos_openmpi:latest

    # MPICH
    buster_mpich:
        docker:
            - image:  docker.io/cselab/debian_buster_mpich:latest

    fedora_mpich:
        docker:
            - image:  docker.io/cselab/fedora_mpich:latest

    ubuntu_mpich:
        docker:
            - image:  docker.io/cselab/ubuntu_mpich:rolling

commands:
    checkout_code:
        steps:
            - checkout
            - run:
                name: Initalize submodules
                command: git submodule update --init --recursive

jobs:
    coverage:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
            buildtype:
                type: string
                default: debug
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Debug build (full, code coverage)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --prefix=~/test_install --buildtype=<< parameters.buildtype >> -Db_coverage=true &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install &&
                  ninja -C build -j 1 coverage &&
                  ./tools/quality/coverage &&
                  ./tools/quality/codecov -X search -X fix -f '*.gcov'
            - store_artifacts:
                path: build/meson-logs

    build:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
            buildtype:
                type: string
                default: debug
            buildargs:
                type: string
                default: ""
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Debug build (full, code coverage)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --prefix=~/test_install --buildtype=<< parameters.buildtype >> -Dwerror=true << parameters.buildargs >> &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install
            - store_artifacts:
                path: build/meson-logs

workflows:
    coverage:
        jobs:
            - coverage:
                name: debian_buster_openmpi_debug
                image: buster_openmpi
            - coverage:
                name: ubuntu_openmpi_debug
                image: ubuntu_openmpi
            - coverage:
                name: centos_openmpi_debug
                image: centos_openmpi
            - coverage:
                name: fedora_openmpi_debug
                image: fedora_openmpi

    debian_openmpi_gcc:
        jobs:
            - build:
                name: debug
                image: buster_openmpi
            - build:
                name: release
                image: buster_openmpi
                buildtype: release
            - build:
                name: debug_32bit_index
                image: buster_openmpi
                buildargs: "-DCUBISM_32BIT_INDEX=true"
            - build:
                name: debug_without_IO
                image: buster_openmpi
                buildargs: "-DCUBISM_IO=false"

    debian_openmpi_clang:
        jobs:
            - build:
                name: debug
                image: buster_openmpi
                CC: clang
                CXX: clang++
            - build:
                name: release
                image: buster_openmpi
                buildtype: release
                CC: clang
                CXX: clang++

    centos_openmpi_gcc:
        jobs:
            - build:
                name: debug
                image: centos_openmpi
            - build:
                name: release
                image: centos_openmpi
                buildtype: release
            - build:
                name: debug_32bit_index
                image: centos_openmpi
                buildargs: "-DCUBISM_32BIT_INDEX=true"
            - build:
                name: debug_without_IO
                image: centos_openmpi
                buildargs: "-DCUBISM_IO=false"

    centos_openmpi_clang:
        jobs:
            - build:
                name: debug
                image: centos_openmpi
                CC: clang
                CXX: clang++
            - build:
                name: release
                image: centos_openmpi
                buildtype: release
                CC: clang
                CXX: clang++

    fedora_openmpi_gcc:
        jobs:
            - build:
                name: debug
                image: fedora_openmpi
            - build:
                name: release
                image: fedora_openmpi
                buildtype: release

    fedora_openmpi_clang:
        jobs:
            - build:
                name: debug
                image: fedora_openmpi
                CC: clang
                CXX: clang++
            - build:
                name: release
                image: fedora_openmpi
                buildtype: release
                CC: clang
                CXX: clang++

    ubuntu_openmpi_gcc:
        jobs:
            - build:
                name: debug
                image: ubuntu_openmpi
            - build:
                name: release
                image: ubuntu_openmpi
                buildtype: release

    ubuntu_openmpi_clang:
        jobs:
            - build:
                name: debug
                image: ubuntu_openmpi
                CC: clang
                CXX: clang++
            - build:
                name: release
                image: ubuntu_openmpi
                buildtype: release
                CC: clang
                CXX: clang++
