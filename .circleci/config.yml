version: 2.1

executors:
    buster_mpich:
        docker:
            - image:  docker.io/cselab/debian_buster_mpich:latest

    buster_openmpi:
        docker:
            - image:  docker.io/cselab/debian_buster_openmpi:latest

    fedora_mpich:
        docker:
            - image:  docker.io/cselab/fedora_mpich:latest

    fedora_openmpi:
        docker:
            - image:  docker.io/cselab/fedora_openmpi:latest

    ubuntu_mpich:
        docker:
            - image:  docker.io/cselab/ubuntu_mpich:rolling

    ubuntu_openmpi:
        docker:
            - image:  docker.io/cselab/ubuntu_openmpi:rolling

# TODO: [fabianw@mavt.ethz.ch; 2021-03-21] centos

commands:
    checkout_code:
        steps:
            - checkout
            - run:
                name: Initalize submodules
                command: git submodule update --init --recursive

jobs:
    debug_and_coverage:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Debug build (full, code coverage)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --buildtype=debug --prefix=~/test_install -Db_coverage=true &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install &&
                  ninja -C build -j 1 coverage &&
                  ./tools/quality/codecov -f "build/meson-logs/coverage.xml"
            - store_artifacts:
                path: build/meson-logs

    debug:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Debug build (full, code coverage)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --buildtype=debug --prefix=~/test_install &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install
            - store_artifacts:
                path: build/meson-logs

    release:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Release build (full)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --buildtype=release --prefix=~/test_install &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install
            - store_artifacts:
                path: build/meson-logs

    debug_32bit_index:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Debug build (full; 32bit index)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --buildtype=debug --prefix=~/test_install -DCUBISM_32BIT_INDEX=true &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install
            - store_artifacts:
                path: build/meson-logs

    debug_no_IO:
        parameters:
            image:
                type: executor
            CC:
                type: string
                default: gcc
            CXX:
                type: string
                default: g++
        executor: << parameters.image >>
        steps:
            - checkout_code
            - run:
                name: Debug build (no libCubismIO)
                command: >
                  CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --buildtype=debug --prefix=~/test_install -DCUBISM_IO=false &&
                  ninja -C build -j 1 test && 
                  ninja -C build -j 1 install
            - store_artifacts:
                path: build/meson-logs

workflows:
    debian_openmpi_gcc:
        jobs:
            - debug_and_coverage:
                image: buster_openmpi
            # - debug:
            #     image: buster_openmpi
            # - debug_32bit_index:
            #     image: buster_openmpi
            # - debug_no_IO:
            #     image: buster_openmpi
            # - release:
            #     image: buster_openmpi

    # debian_openmpi_clang:
    #     jobs:
    #         - debug:
    #             image: buster_openmpi
    #             CC: clang
    #             CXX: clang++
    #         - release:
    #             image: buster_openmpi
    #             CC: clang
    #             CXX: clang++

    # debian_mpich_gcc:
    #     jobs:
    #         - debug_and_coverage:
    #             image: buster_mpich
    #         - debug:
    #             image: buster_mpich
    #         - debug_32bit_index:
    #             image: buster_mpich
    #         - debug_no_IO:
    #             image: buster_mpich
    #         - release:
    #             image: buster_mpich

    # fedora_openmpi_gcc:
    #     jobs:
    #         - debug_and_coverage:
    #             image: fedora_openmpi
    #         - debug:
    #             image: fedora_openmpi
    #         - debug_32bit_index:
    #             image: fedora_openmpi
    #         - debug_no_IO:
    #             image: fedora_openmpi
    #         - release:
    #             image: fedora_openmpi

    # fedora_openmpi_clang:
    #     jobs:
    #         - debug:
    #             image: fedora_openmpi
    #             CC: clang
    #             CXX: clang++
    #         - release:
    #             image: fedora_openmpi
    #             CC: clang
    #             CXX: clang++

    # fedora_gcc:
    #     jobs:
    #         # - debug_and_coverage:
    #         #     image: fedora_mpich
    #         # - release:
    #         #     image: fedora_mpich
    #         # - debug_32bit_index:
    #         #     image: fedora_mpich
    #         # - debug_no_IO:
    #         #     image: fedora_mpich
    #         - debug_and_coverage:
    #             image: fedora_openmpi
    #         - release:
    #             image: fedora_openmpi
    #         - debug_32bit_index:
    #             image: fedora_openmpi
    #         - debug_no_IO:
    #             image: fedora_openmpi

    # ubuntu_openmpi_gcc:
    #     jobs:
    #         - debug_and_coverage:
    #             image: ubuntu_openmpi
    #         - debug:
    #             image: ubuntu_openmpi
    #         - debug_32bit_index:
    #             image: ubuntu_openmpi
    #         - debug_no_IO:
    #             image: ubuntu_openmpi
    #         - release:
    #             image: ubuntu_openmpi

    # ubuntu_openmpi_clang:
    #     jobs:
    #         - debug:
    #             image: ubuntu_openmpi
    #             CC: clang
    #             CXX: clang++
    #         - release:
    #             image: ubuntu_openmpi
    #             CC: clang
    #             CXX: clang++
